#!/bin/sh

# Gets the Invidious instance from a Environment var.
INVIDIOUS_INSTANCE=$(printenv INVIDIOUS_INSTANCE)
SEARCH_TERM=""

# If INVIDIOUS_INSTANCE is empty fill it with the default instance.
if [ -z "$INVIDIOUS_INSTANCE" ]; then
	INVIDIOUS_INSTANCE="https://invidious.sevengames.xyz"
fi

add_strings() {
	for thing in "$@"; do
		SEARCH_TERM=${SEARCH_TERM}${thing}"+"
	done
	SEARCH_TERM="$(echo "$SEARCH_TERM" | sed 's/\ /+/g')"
}

print_videos() {
	# Sets i to the length of the JSON file minus 1.
	i=$(($(echo "$1" | jq "length") - 1))

	# While i is greater than -1.
	while [ $i -gt -1 ]; do
		# Get the title, video id, and author from the JSON file. Then strips them.
		title=$(echo "$1" | jq ".[$i].title" | sed 's/\\\"/@QuOtE@/g' | sed 's/\"//g' | sed 's/@QuOtE@/\"/g')
		id=$(echo "$1" | jq ".[$i].videoId" | sed 's/\"//g')
		author=$(echo "$1" | jq ".[$i].author" | sed 's/\"//g')

		# Check to make sure that the the result is a valid video.
		# Takes the values and puts them in the corosponding files.
		[ ! "$id" = "null" ] && printf "%s | %s | %s\n" "$title" "$author" "$id"

		i=$((i - 1))
	done
}

# Searches for video.
search_videos() {
	# Uses cURL to get the JSON file from the instance and puts it in a var.
	search="$(curl -s "$INVIDIOUS_INSTANCE/api/v1/search?q=$1")"

	# Checks if there is an error.
	[ "$(echo "$search" | grep "<head><title>429 Too Many Requests</title></head>")" ] && printf "API not available\n" && exit

	# Prints the videos.
	print_videos "$search"
}

# Takes all the arguments and combines them into the SEARCH_TERM var.
add_strings "$@"
# If there is no search term print help and exit.
[ "$SEARCH_TERM" = "" ] && printf "usage: %s [STRING]...\n" "$(basename "$0")" && exit

search_videos "$SEARCH_TERM"

